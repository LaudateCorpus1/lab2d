# A workflow to run Bazel builds and tests.

name: precommit

on:
  pull_request:
  push:
    branches:
      - 'main'
      - 'beta'

jobs:
  build-and-test:
    name: Build+test ${{matrix.cfg.name}} ${{matrix.os.name}}

    runs-on: ${{matrix.os.id}}

    strategy:
      matrix:
        os:
          - { name: 'Linux', id: 'ubuntu-20.04' }
        cfg:
          - { name: 'GCC', cc: gcc-10, cxx: g++-10, config: }
          - { name: 'LLVM+libstdc++', cc: clang, cxx: clang++, config: }
          - { name: 'LLVM+libc++', cc: clang, cxx: clang++, config: --config=libc++ }

    env:
      CC:  ${{ matrix.cfg.cc }}
      CXX: ${{ matrix.cfg.cxx }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 2.7
      - name: install infrastructure (Linux)
        run: |
          sudo apt-get install python-numpy python3-dev python3-numpy
          sudo ln -s /usr/lib/llvm-10/include/c++/v1 /usr/include/c++/v1
        if: matrix.os.id == 'ubuntu-20.04'
      - name: build-and-test-lua5.1
        run: |
          bazel --bazelrc=.bazelrc build --config=lua5_1 ${{ matrix.cfg.config }} //...
          bazel --bazelrc=.bazelrc test  --config=lua5_1 ${{ matrix.cfg.config }} --test_output=errors //...
      - name: build-and-test-lua5.2
        run: |
          bazel --bazelrc=.bazelrc build --config=lua5_2 ${{ matrix.cfg.config }} //...
          bazel --bazelrc=.bazelrc test  --config=lua5_2 ${{ matrix.cfg.config }} --test_output=errors //...
      - name: build-and-test-luajit
        run: |
          bazel --bazelrc=.bazelrc build --config=luajit ${{ matrix.cfg.config }} //...
          bazel --bazelrc=.bazelrc test  --config=luajit ${{ matrix.cfg.config }} --test_output=errors //...
